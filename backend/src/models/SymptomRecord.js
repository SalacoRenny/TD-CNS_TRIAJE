// ===============================================
// üìã SYMPTOM RECORD MODEL - EXPANDIDO PARA WATSON CHAT
// backend/src/models/SymptomRecord.js
// ===============================================

import mongoose from "mongoose";

const SymptomRecordSchema = new mongoose.Schema({
  // ‚úÖ CAMPOS ORIGINALES (mantener tal como est√°n)
  userId: { type: String, required: true },
  symptoms: { type: [String], required: true },
  baseConditions: { type: [String], default: [] },
  notes: { type: String },
  temperature: { type: String, default: "" },
  timestamp: { type: String, required: true },
  createdAt: { type: Date, default: Date.now },

  // üÜï NUEVOS CAMPOS WATSON (expandir para compatibilidad completa)
  
  // ID de sesi√≥n √∫nico
  sessionId: {
    type: String,
    default: null
  },
  
  // Respuesta completa de Watson
  watson_response: {
    type: mongoose.Schema.Types.Mixed,
    default: null
  },
  
  // M√©todo de clasificaci√≥n usado
  classification_method: {
    type: String,
    enum: ['watson', 'simple', 'watson_fallback', 'watson_chat'],
    default: 'simple'
  },
  
  // Clasificaci√≥n final procesada
  final_classification: {
    level: Number,
    color: String,
    label: String,
    bgColor: String,
    specialty: String,
    source: String,
    confidence: Number
  },
  
  // Contexto enviado a Watson
  context_sent_to_watson: {
    type: String,
    default: ''
  },
  
  // ID de sesi√≥n anterior (para memoria contextual)
  previous_session_id: {
    type: String,
    default: null
  },
  
  // Secuencia en la sesi√≥n
  session_sequence: {
    type: Number,
    default: 1
  },
  
  // Si es consulta de seguimiento
  is_follow_up: {
    type: Boolean,
    default: false
  },
  
  // Tiempo de procesamiento en milisegundos
  processing_time_ms: {
    type: Number,
    default: 0
  },
  
  // Score de confianza de la clasificaci√≥n
  confidence_score: {
    type: Number,
    min: 0,
    max: 1,
    default: 0.8
  },
  
  // Tokens Watson utilizados
  watson_tokens_used: {
    type: Number,
    default: 0
  },
  
  // Raz√≥n del fallback si aplica
  fallback_reason: {
    type: String,
    default: ''
  },

  // üÜï CAMPOS ESPEC√çFICOS PARA WATSON CHAT
  
  // ID de conversaci√≥n relacionada
  conversation_id: {
    type: String,
    default: null
  },
  
  // N√∫mero de intercambios en la conversaci√≥n
  conversation_turns: {
    type: Number,
    default: 0
  },
  
  // Si tuvo contexto hist√≥rico del paciente
  had_historical_context: {
    type: Boolean,
    default: false
  },
  
  // N√∫mero de consultas previas consideradas
  historical_consultations_count: {
    type: Number,
    default: 0
  },
  
  // Fase de conversaci√≥n en la que se clasific√≥
  classification_phase: {
    type: Number,
    default: 4
  },
  
  // Resumen de la conversaci√≥n
  conversation_summary: {
    type: String,
    default: ''
  }
});

// üìä √çndices para optimizaci√≥n (mantener + agregar nuevos)
SymptomRecordSchema.index({ userId: 1, createdAt: -1 });
SymptomRecordSchema.index({ sessionId: 1 });
SymptomRecordSchema.index({ conversation_id: 1 });
SymptomRecordSchema.index({ classification_method: 1 });
SymptomRecordSchema.index({ is_follow_up: 1, userId: 1 });

const SymptomRecord = mongoose.model("SymptomRecord", SymptomRecordSchema);
export default SymptomRecord;